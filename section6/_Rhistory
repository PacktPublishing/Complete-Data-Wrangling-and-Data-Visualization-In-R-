linetype="dashed")
library(plyr)
m =ddply(iris, "Species", summarise, grp.mean=mean(Sepal.Width))
m
ggplot(iris, aes(x=Sepal.Width, color=Species)) +
geom_histogram(fill="white", position="dodge")+
theme(legend.position="top")
g=ggplot(iris, aes(x=Sepal.Width, color=Species)) +
geom_histogram(fill="white", position="dodge")+
theme(legend.position="top")
g
g+geom_vline(data=m, aes(xintercept=grp.mean, color=Species),
linetype="dashed")+
theme(legend.position="top")
g+geom_vline(data=m, aes(xintercept=grp.mean, color=Species),
linetype="dashed")+
theme(legend.position="top")+scale_color_manual(values=c("#999999", "#E69F00", "#56B4E9"))
ggplot(iris,aes(Sepal.Width, fill=Species, color=Species))
+geom_histogram()
ggplot(iris,aes(Sepal.Width, fill=Species, color=Species))+
geom_histogram()
ggplot(iris,aes(Sepal.Width))+geom_histogram()
ggplot(iris,aes(Sepal.Width))+geom_histogram(binwidth = 0.01)
ggplot(iris,aes(Sepal.Width))+geom_histogram(binwidth = 0.5)
ggplot(iris,aes(Sepal.Width, fill=Species))+geom_histogram()
ggplot(iris,aes(Sepal.Width, fill=Species, color=Species))+
geom_histogram()
ggplot(iris,aes(Sepal.Width,color=Species))+
geom_histogram()
ggplot(iris,aes(Sepal.Width, fill=Species))+
geom_histogram(color="black", fill="red",
linetype="dashed")
ggplot(iris,aes(Sepal.Width))+
geom_histogram(color="black", fill="red",
linetype="dashed")
m =ddply(iris, "Species", summarise, grp.mean=mean(Sepal.Width))
m
g=ggplot(iris, aes(x=Sepal.Width, color=Species)) +
geom_histogram(fill="white", position="dodge")+
theme(legend.position="top")
g
g=ggplot(iris, aes(x=Sepal.Width, color=Species)) +
geom_histogram(fill="white", position="dodge")+
theme(legend.position="bottom")
g
g+geom_vline(data=m, aes(xintercept=grp.mean, color=Species),
linetype="dashed")+
theme(legend.position="top")
# customize color
g+geom_vline(data=m, aes(xintercept=grp.mean, color=Species),
linetype="dashed")+
theme(legend.position="top")+scale_color_manual(values=c("#999999", "#E69F00", "#56B4E9"))
# customize color
g+geom_vline(data=m, aes(xintercept=grp.mean, color=Species),
linetype="dashed")+
theme(legend.position="top")+scale_color_manual(values=c("red", "yellow", "green"))
head(diamonds)
ggplot(diamonds, aes(price, colour = clarity)) +
geom_freqpoly(binwidth = 400)
ggplot(diamonds, aes(price,stat(density), colour = clarity)) +
geom_freqpoly(binwidth = 400)
ggplot(diamonds, aes(price,stat(density), colour = cut)) +
geom_freqpoly(binwidth = 400)
install.packages("ggpubr")
head(diamonds)
ggplot(data=diamonds)+geom_bar(mapping=aes(x=color))
ggplot(data=diamonds)+stat_count(mapping=aes(x=color))
ggplot(data=diamonds)+geom_bar(mapping=aes(x=color
y=..prop..,group=1))
ggplot(data=diamonds)+geom_bar(mapping=aes(x=color,
y=..prop..,group=1))
library(ggplot2)
library(plyr)
m =ddply(iris, "Species", summarise, grp.mean=mean(Sepal.Width))
m
g=ggplot(data=m, aes(x=Species, y=grp.mean)) +
geom_bar(stat="identity")
g
# Horizontal bar plot
g + coord_flip()
ggplot(data=iris)+
stat_summary(mapping=aes(x=Species, y=grp.mean),
fun.ymin = min,
fun.ymax = max,
fun.y=median)
library(plyr)
m =ddply(iris, "Species", summarise, grp.mean=mean(Sepal.Width))
m
g=ggplot(data=m, aes(x=Species, y=grp.mean)) +
geom_bar(stat="identity")
g
# Horizontal bar plot
g + coord_flip()
ggplot(data=iris)+
stat_summary(mapping=aes(x=Species, y=grp.mean),
fun.ymin = min,
fun.ymax = max,
fun.y=median)
ggplot(data=iris)+
stat_summary(mapping=aes(x=Species, y=Sepal.Width),
fun.ymin = min,
fun.ymax = max,
fun.y=median)
ggplot(data=iris)+
stat_summary(mapping=aes(x=Species, y=Sepal.Width),
fun.ymin = min,
fun.ymax = max,
fun.y=mean)
### how many items fall in a factor category?
### y-axis: count
ggplot(data=diamonds)+geom_bar(mapping=aes(x=color))
head(diamonds)
ggplot(data=diamonds)+geom_bar(mapping=aes(x=cut,color=cut))
ggplot(data=diamonds)+
geom_bar(mapping=aes(x=clarity,color=clarity))
##fill with colors
ggplot(data=diamonds)+
geom_bar(mapping=aes(x=clarity,fill=clarity))
ggplot(data=diamonds)+
geom_bar(mapping = aes(x=cut, fill=color))
ggplot(data=diamonds)+geom_bar(mapping=aes(x=cut,fill=color,
y=..prop..,group=1))
ggplot(data=diamonds)+geom_bar(mapping=aes(x=cut,fill=color,y=..prop..,group=1))
ggplot(data=diamonds,mapping = aes(x=cut, fill=color))+
geom_bar(alpha=1/5,position = "identity"))
ggplot(data=diamonds,mapping = aes(x=cut, fill=color))+
geom_bar(alpha=1/5,position = "identity")
ggplot(data=diamonds)+
geom_bar(mapping = aes(x=cut, fill=color,position="fill"))
ggplot(data=diamonds)+
geom_bar(mapping = aes(x=cut, fill=clarity,position="fill"))
ggplot(data=diamonds)+
geom_bar(mapping = aes(x=cut, fill=color),position = "dodge")
head(diamonds)
### how many items fall in a factor category?
### y-axis: count
ggplot(data=diamonds)+geom_bar(mapping=aes(x=color))
ggplot(data=diamonds)+stat_count(mapping=aes(x=color))
## outline colors
ggplot(data=diamonds)+
geom_bar(mapping=aes(x=clarity,color=clarity))
##fill with colors
ggplot(data=diamonds)+
geom_bar(mapping=aes(x=clarity,fill=clarity))
ggplot(data=diamonds)+
geom_bar(mapping = aes(x=cut, fill=color)) ##stacked bar
ggplot(data=diamonds,mapping = aes(x=cut, fill=color))+
geom_bar(alpha=1/5,position = "identity")
ggplot(data=diamonds)+
geom_bar(mapping = aes(x=cut, fill=color),position = "dodge")
### the proportion of each category
ggplot(data=diamonds)+geom_bar(mapping=aes(x=color,
y=..prop..,group=1))
m =ddply(iris, "Species", summarise, grp.mean=mean(Sepal.Width))
m
g=ggplot(data=m, aes(x=Species, y=grp.mean)) +
geom_bar(stat="identity")
g
# Horizontal bar plot
g + coord_flip()
### include min, mean, max
ggplot(data=iris)+
stat_summary(mapping=aes(x=Species, y=Sepal.Width),
fun.ymin = min,
fun.ymax = max,
fun.y=mean)
library(dplyr)
library(tidyverse)
x=diamonds %>%
count(color)
x
g= ggplot(x, aes(x="", y=n, fill=color))
g + coord_polar("y", start=0)
x=diamonds %>%
count(cut)
x
g= ggplot(x, aes(x="", y=n, fill=cut))
g + coord_polar("y", start=0)
x=as.data.frame(x)
x
g= ggplot(x, aes(x="", y=n, fill=cut))
g + coord_polar("y", start=0)
library(ggplot2)
head(diamonds)
ggplot(diamonds, aes(cut, price, fill = color)) +
stat_summary(geom = "bar", fun.y = mean, position = "dodge") +
stat_summary(geom = "errorbar", fun.data = mean_se, position = "dodge")
ggplot(diamonds, aes(price, fill = color)) +
stat_summary(geom = "bar", fun.y = mean, position = "dodge") +
stat_summary(geom = "errorbar", fun.data = mean_se, position = "dodge")
ggplot(diamonds, aes(cut, price, fill = color)) +
stat_summary(geom = "bar", fun.y = mean, position = "dodge") +
stat_summary(geom = "errorbar", fun.data = mean_se, position = "dodge")
library(tidyverse)
mse= diamonds %>%
group_by(cut, color) %>%
summarise(new = list(mean_se(price))) %>%
unnest(new)
mse
mse %>%
ggplot(aes(cut, y = y, fill = color)) +
geom_col(position = "dodge") +
geom_errorbar(aes(ymin = ymin, ymax = ymax), position = "dodge")
head(diamonds)
## factor(x), quant variable(y), color= factor2
ggplot(diamonds, aes(clarity, price, fill = color)) +
stat_summary(geom = "bar", fun.y = mean, position = "dodge") +
stat_summary(geom = "errorbar", fun.data = mean_se, position = "dodge")
mse
mse %>%
ggplot(aes(cut, y = y, fill = color)) +
geom_col(position = "dodge") +
geom_errorbar(aes(ymin = ymin, ymax = ymax), position = "dodge")
library(ggplot)
library(ggplot2)
head(iris)
ggplot(iris,aes(x=Species,y=Sepal.Width))+geom_boxplot()
g+coord_flip()
g=ggplot(iris,aes(x=Species,y=Sepal.Width))+geom_boxplot()
g+coord_flip()
ggplot(iris,aes(x=Species,y=Sepal.Width))+
geom_boxplot(notch = True)
ggplot(iris,aes(x=Species,y=Sepal.Width))+
geom_boxplot(notch = TRUE)
g=ggplot(iris,aes(x=Species,y=Sepal.Width))+
geom_boxplot(outlier.color = "red", outlier.size = 8)
ggplot(iris,aes(x=Species,y=Sepal.Width))+
geom_boxplot(outlier.color = "red", outlier.size = 8)
ggplot(iris,aes(x=Species,y=Sepal.Width))+
geom_boxplot(outlier.color = "red", outlier.size = 5)
g=ggplot(iris,aes(x=Species,y=Sepal.Width))+geom_boxplot()
g + stat_summary(fun.y=mean, geom="point")
head(iris)
ggplot(iris,aes(x=Species,y=Sepal.Width))+geom_boxplot()
g=ggplot(iris,aes(x=Species,y=Sepal.Width))+geom_boxplot()
g+coord_flip()
ggplot(iris,aes(x=Species,y=Sepal.Width))+
geom_boxplot(notch = TRUE)
ggplot(iris,aes(x=Species,y=Sepal.Width))+
geom_boxplot(outlier.color = "green")
ggplot(iris,aes(x=Species,y=Sepal.Width))+
geom_boxplot(outlier.color = "green",outlier.size = 3)
g=ggplot(iris,aes(x=Species,y=Sepal.Width))+geom_boxplot()
g + stat_summary(fun.y=mean, geom="point")
library(ggplot2)
head(iris)
ggplot(iris, aes(x=Species, y=Sepal.Width, color=Species)) +
geom_boxplot()
ggplot(iris, aes(x=Species, y=Sepal.Width, color=Species)) +
geom_boxplot()+scale_color_brewer(palette="Dark2")
ggplot(iris, aes(x=Species, y=Sepal.Width, color=Species)) +
geom_boxplot()+scale_color_brewer(palette="Dark1")
ggplot(iris, aes(x=Species, y=Sepal.Width, color=Species)) +
geom_boxplot()+scale_color_brewer(palette="Dark2")
ggplot(iris, aes(x=Species, y=Sepal.Width, color=Species)) +
geom_boxplot()+scale_color_brewer(palette="Set2")
ggplot(iris, aes(x=Species, y=Sepal.Width, color=Species)) +
geom_boxplot()+scale_color_brewer(palette="Set3")
ggplot(iris, aes(x=Species, y=Sepal.Width, color=Species)) +
geom_boxplot()+scale_color_manual(values=c("red","green","blue"))
ggplot(iris, aes(x=Species, y=Sepal.Width, color=Species)) +
geom_boxplot()+scale_color_manual(values=c("#e41a1c","green","blue"))
ggplot(iris, aes(x=Species, y=Sepal.Width, color=Species)) +
geom_boxplot()+scale_color_manual(values=c("#e41a1c","#377eb8","#4daf4a"))
ggplot(iris, aes(x=Species, y=Sepal.Width, fill=Species)) +
geom_boxplot()
ggplot(iris, aes(x=Species, y=Sepal.Width, fill=Species)) +
geom_boxplot()+scale_color_brewer(palette="Set3")
ggplot(iris, aes(x=Species, y=Sepal.Width, fill=Species)) +
geom_boxplot()+scale_color_brewer(palette="Set1")
ggplot(iris, aes(x=Species, y=Sepal.Width, fill=Species)) +
geom_boxplot()+scale_fill_brewer(palette = "Dark2")
ggplot(iris, aes(x=Species, y=Sepal.Width, fill=Species)) +
geom_boxplot()+scale_fill_brewer(palette = "Dark2")+
theme(legend.position = "top")
ggplot(iris, aes(x=Species, y=Sepal.Width, fill=Species)) +
geom_boxplot(position = position_dodge(1))
head(ToothGrowth)
ToothGrowth$dose <- as.factor(ToothGrowth$dose)
summary(ToothGrowth)
ggplot(ToothGrowth, aes(x=dose, y=len, fill=supp)) +
geom_boxplot()
ggplot(ToothGrowth, aes(x=supp, y=len, fill=dose)) +
geom_boxplot()
ggplot(ToothGrowth, aes(x=supp, y=len, fill=dose)) +
geom_boxplot(position = position_dodge(1))
ggplot(ToothGrowth, aes(x=supp, y=len, fill=dose)) +
geom_boxplot(position = position_dodge(2))
head(iris)
ggplot(iris, aes(x=Species, y=Sepal.Width)) +
geom_boxplot()
ggplot(iris, aes(x=Species, y=Sepal.Width,color=Species)) +
geom_boxplot()
ggplot(iris, aes(x=Species, y=Sepal.Width, color=Species)) +
geom_boxplot()+scale_color_manual(values=c("#e41a1c","#377eb8","#4daf4a"))
ggplot(iris, aes(x=Species, y=Sepal.Width, color=Species)) +
geom_boxplot()+scale_color_manual(values=c("red","purple","green"))
ggplot(iris, aes(x=Species, y=Sepal.Width, color=Species)) +
geom_boxplot()+scale_color_brewer(palette="Set3")
ggplot(iris, aes(x=Species, y=Sepal.Width, color=Species)) +
geom_boxplot()+scale_color_brewer(palette = "Dark2")
ggplot(iris, aes(x=Species, y=Sepal.Width, fill=Species)) +
geom_boxplot()
ggplot(iris, aes(x=Species, y=Sepal.Width, fill=Species)) +
geom_boxplot()+scale_fill_brewer(palette = "Dark2")
ggplot(iris, aes(x=Species, y=Sepal.Width, fill=Species)) +
geom_boxplot()+scale_fill_brewer(palette = "Dark2")+
theme(legend.position = "top")
ggplot(iris, aes(x=Species, y=Sepal.Width, fill=Species)) +
geom_boxplot()+scale_fill_brewer(palette = "Set3")+
theme(legend.position = "bottom")
head(ToothGrowth)
summary(ToothGrowth)
ggplot(ToothGrowth, aes(x=dose, y=len, fill=supp)) +
geom_boxplot()
ggplot(ToothGrowth, aes(x=supp, y=len, fill=dose)) +
geom_boxplot()
library(tidyverse)
vignette("tibble")
class(iris)
i=as_tibble(iris)
head()
head(i)
nycflights13::flights %>% View()
install.packages("nycflights13")
library((nycflights13)
)
library(nycflights13)
nycflights13::flights %>% View()
nycflights13 %>% View()
vignette("tibble")
class(iris)
i=as_tibble(iris)
head(i)
nycflights13::flights %>% View()
install.packages("gridExtra")
library(tidyverse)
head(iris)
iris %>%
select(sepal_l=Sepal.Length,sepal_w=Sepal.Width,iris_s=Species)
sep=iris %>%
select(sepal_l=Sepal.Length,sepal_w=Sepal.Width,iris_s=Species)
head(sep)
r = iris %>%
rename(petal_w=Petal.Width)
head(r)
strl = iris %>% select_all(str_to_lower)
head(strl)
library(tidyverse)
head(iris)
r = iris %>%
rename(petal_w=Petal.Width)
head(r)
sep=iris %>%
select(sepal_l=Sepal.Length,sepal_w=Sepal.Width,iris_s=Species)
head(sep)
strl = iris %>% select_all(str_to_lower)
con1 = iris %>% rename_if(!is.numeric,str_to_lower)
con1 = iris %>% rename_if(is.numeric,str_to_lower)
con1 = iris %>% rename_if(is.numeric,str_to_upper)
head(con1)
c
con2 - iris %>% rename_at(vars(starts_with("P")),str_to_lower)
con2 = iris %>% rename_at(vars(starts_with("P")),str_to_lower)
head(con2)
head(mtcars)
x = mtcars %>% rownames_to_column("model")
head(x)
install.packages("ecolMod")
install.packages("SDMTools")
install.packages("spatialEco")
install.packages("diveRsity")
setwd("~/Desktop/forecast/Data viz_r/Data and Code/section7")
getwd()
setwd("~/Desktop/forecast/Data viz_r/Data and Code/section6")
getwd()
library(tidyverse)
library(ggthemes)
atheletes =read.csv("athlete_events.csv", stringsAsFactors = F)
rem=atheletes %>%
filter(Medal != "<NA>") ## retain all data which is not NA
head(rem)
class(rem$Year)
rem$Year = as.factor(rem$Year)
s= rem %>% group_by(Year, Sex) %>%
filter(Season=='Summer') %>%
summarize(Count=n()) %>%
arrange(Year)
head(s)
ggplot(s, aes(x=Year, y=Count, group=Sex,
label=format(Count, big.mark=".",
decimal.mark=","))) +
geom_line(aes(color=Sex)) +
geom_point(aes(color=Sex)) +
geom_text_repel() +
scale_x_continuous(breaks=seq(min(plot$Year), max(plot$Year), by=10)) +
scale_y_discrete() +
theme(legend.position="right")+
labs(title="Participation of mans and womans over the years", x="Years", y="Num. Participants")
ggplot(s, aes(x=Year, y=Count, group=Sex,
label=format(Count, big.mark=".",
decimal.mark=","))) +
geom_line(aes(color=Sex)) +
geom_point(aes(color=Sex)) +
scale_x_continuous(breaks=seq(min(plot$Year), max(plot$Year), by=10)) +
scale_y_discrete() +
theme(legend.position="right")+
labs(title="Participation of mans and womans over the years", x="Years", y="Num. Participants")
ggplot(s, aes(x=Year, y=Count, group=Sex,))
ggplot(s, aes(x=Year, y=Count, group=Sex))+
geom_line(aes(color=Sex)) +
geom_point(aes(color=Sex))
ggplot(s, aes(x=Year, y=Count, group=Sex))+
geom_line(aes(color=Sex)) +
geom_point(aes(color=Sex)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
p= rem %>% group_by(Sport, Sex) %>%
filter(Season=='Summer') %>%
summarize(Count=n()) %>%
arrange(Year)
p= rem %>% group_by(Sport, Sex) %>%
filter(Season=='Summer') %>%
summarize(Count=n())
p
p= rem %>% group_by(Sport, Sex) %>%
filter(Season=='Summer') %>%
summarize(Count=n()) %>%
group_by(Sex) %>% top_n(10,Sport)
p
ggplot(p, aes(x=Year, y=Count, group=Sport)) +
geom_col(aes(fill=Sport))
ggplot(p, aes(x=Sex, y=Count, group=Sport)) +
geom_col(aes(fill=Sport))
ggplot(p, aes(x=Sport, y=Count, group=Sex)) +
geom_col(aes(fill=Sport))
ggplot(p, aes(x=Sport, y=Count, group=Sex)) +
geom_barplot(aes(fill=Sex))
ggplot(p, aes(x=Sport, y=Count, group=Sex)) +
geom_col(aes(fill=Sex))
ggplot(p, aes(x=Sport, y=Count, group=Sex)) +
geom_col(aes(fill=Sex))+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
m_2016 = rem %>% filter(Year==2016, Sex=="F") %>%
group_by(NOC, Medal) %>%
summarize(Count=length(Medal))
head(m_2016)
ggplot(m_2016, aes(x=NOC, y=Count, fill=Medal)) +
geom_col() +
coord_flip() +
scale_fill_manual(values=c("gold1","gray70","gold4")) +
ggtitle("Medal counts for women at the 2016 Rio Olympics") +
theme(plot.title = element_text(hjust = 0.5),
axis.text.y = element_text(size=6))
l_2016 = m_2016 %>%
group_by(NOC) %>%
summarize(Total=sum(Count)) %>%
arrange(Total) %>%
select(NOC)
head(l_2016)
m_2016$NOC = factor(m_2016$NOC, levels=l_2016$NOC)
ggplot(m_2016, aes(x=NOC, y=Count, fill=Medal)) +
geom_col() +
coord_flip() +
scale_fill_manual(values=c("gold1","gray70","gold4")) +
ggtitle("Medal counts for women at the 2016 Rio Olympics") +
theme(plot.title = element_text(hjust = 0.5),
axis.text.y = element_text(size=6))
head(atheletes)
head(rem)
class(rem$Year)
s= rem %>% group_by(Year, Sex) %>%
filter(Season=='Summer') %>%
summarize(Count=n()) %>%
arrange(Year)
head(s)
ggplot(s, aes(x=Year, y=Count, group=Sex))+
geom_line(aes(color=Sex)) +
geom_point(aes(color=Sex)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
p= rem %>% group_by(Sport, Sex) %>%
filter(Season=='Summer') %>%
summarize(Count=n()) %>%
group_by(Sex) %>% top_n(10,Sport)
p
ggplot(p, aes(x=Sport, y=Count, group=Sex)) +
geom_col(aes(fill=Sex))+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
m_2016 = rem %>% filter(Year==2016, Sex=="F") %>%
group_by(NOC, Medal) %>%
summarize(Count=length(Medal))
head(m_2016)
ggplot(m_2016, aes(x=NOC, y=Count, fill=Medal)) +
geom_col() +
coord_flip() +
scale_fill_manual(values=c("gold1","gray70","gold4")) +
ggtitle("Medal counts for women at the 2016 Rio Olympics") +
theme(plot.title = element_text(hjust = 0.5),
axis.text.y = element_text(size=6))
head(l_2016)
ggplot(m_2016, aes(x=NOC, y=Count, fill=Medal)) +
geom_col() +
coord_flip() +
scale_fill_manual(values=c("gold1","gray70","gold4")) +
ggtitle("Medal counts for women at the 2016 Rio Olympics") +
theme(plot.title = element_text(hjust = 0.5),
axis.text.y = element_text(size=6))
install.packages(c("maps", "mapdata"))
install.packages("ggmap")
library(ggplot2)
library(ggmap)
library(maps)
library(mapdata)
